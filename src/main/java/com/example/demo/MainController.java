package com.example.demo;

import com.example.demo.loanaaplication.LoanApplication;
import com.example.demo.loanaaplication.LoanRepository;
import com.example.demo.login.LoginRequest;
import com.example.demo.login.LoginResponse;
import com.example.demo.signup.SignUpRequest;
import com.example.demo.signup.SignUpResponse;
import com.example.demo.user.User;
import com.example.demo.user.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import sun.net.util.IPAddressUtil;

import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.HashMap;

/**
 * Created by karan on 26/5/17.
 */
@Controller    // This means that this class is a Controller
@RequestMapping(path = "/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;
    @Autowired
    private AddressRepository addressRepository;
    @Autowired
    private LoanRepository loanRepository;


    @PostMapping(value = "/register")
    public @ResponseBody
    SignUpResponse registerUSer(@RequestBody SignUpRequest signUpRequest) {
        User user = signUpRequest.getUser();
        SignUpResponse response = new SignUpResponse();
        if (userRepository.findByEmail(user.getEmail()) == null) {
            response.setSuccess(true);
            User savedUser = userRepository.save(user);
            response.setId(savedUser.getId());
        } else {
            response.setSuccess(false);
        }
        return response;

    }

    @PostMapping(value = "/login")
    public @ResponseBody
    LoginResponse loginUser(@RequestBody LoginRequest loginRequest) {
        LoginResponse loginResponse = new LoginResponse();
        User user = userRepository.findByEmailAndPassword(loginRequest.getEmail(), loginRequest.getPassword());
        if (user != null) {
            loginResponse.setSuccess(true);
            loginResponse.setId(user.getId());
        } else {
            loginResponse.setSuccess(false);
        }
        return loginResponse;
    }

    @PostMapping(value = "/createApplication")
    public @ResponseBody
    HashMap<String, Boolean> createApplication(@RequestBody LoanApplication request) {
        HashMap<String, Boolean> response = new HashMap<>();
        loanRepository.save(request);
        response.put("success", true);
        return response;

    }

    @GetMapping(value = "/getApplications")
    public @ResponseBody
    ArrayList<LoanApplication> getApplications(@RequestHeader(value = "id")int id) throws UnknownHostException {
        InetAddress.getLocalHost().getHostAddress();

        return loanRepository.findAllByUserId(id);
    }
}
